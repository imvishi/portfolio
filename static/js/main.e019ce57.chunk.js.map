{"version":3,"sources":["Components/ToolBar.jsx","Components/Home.jsx","Components/Error404.jsx","js/Constant.js","Components/SocialMedia.jsx","Components/Main.jsx","App.js","serviceWorker.js","index.js"],"names":["divStyle","paddingTop","color","fontFamily","fontSize","ulStyle","cursor","ToolBar","props","style","Navbar","expand","Toggle","aria-controls","Collapse","id","Nav","className","to","Component","Home","icon","faHandPointRight","styleDiv","minHeight","background","textAlign","Error404","SocialMediaUrl","SocialMedia","faGithubSquare","onClick","window","location","href","faLinkedin","faStackOverflow","faTwitterSquare","faFacebookSquare","faInstagram","mainClass","canShowNavBar","this","pathname","console","log","public_url","TransitionGroup","CSSTransition","key","timeout","enter","exit","classNames","exact","path","component","withRouter","App","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e019ce57.chunk.js","sourcesContent":["import React, {Component} from \"react\";\nimport {\n    Navbar,\n    Nav\n} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\n\nconst divStyle = {\n    paddingTop: 10,\n    color: 'white',\n    fontFamily: \"Rubik\",\n    fontSize: 18,\n};\nconst ulStyle = {\n    cursor: \"pointer\"\n}\n\nexport default class ToolBar extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div style={divStyle}>\n                <Navbar expand=\"lg\">\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Nav className=\"ml-auto\">\n                            <ul style={ulStyle}><Link to=\"/home\"> Home</Link></ul>\n                            <ul style={ulStyle}><Link to=\"/about\">About</Link></ul>\n                            <ul style={ulStyle}><Link to=\"/portfolio\">Portfolio</Link></ul>\n                            <ul style={ulStyle}><Link to=\"/contact\">Contact</Link></ul>\n                        </Nav>\n                    </Navbar.Collapse>\n                </Navbar>\n            </div>\n        );\n    }\n}","import React, {Component} from \"react\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faHandPointRight} from \"@fortawesome/free-solid-svg-icons\";\nimport '../Style/HomeStyle.css'\nimport '../Style/FontStyle.sass'\nimport {SectionType} from \"../js/SectionType\";\nimport {Link} from \"react-router-dom\";\n\n/**\n * Component to show the Home Screen of the site.\n */\nexport class Home extends Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        return (\n            <div className=\"ContainerStyle\">\n                <div className=\"WelcomeDiv\">\n                    <p className=\"headerTextLite\">Hey, I'm Vishal Verma</p>\n                    <span>\n                        <p className=\"subHeaderTextLite\">Let's take a tour</p>\n                        <Link to=\"/about\"><FontAwesomeIcon\n                            className=\"WelcomeIcon\"\n                            icon={faHandPointRight}/></Link>\n                    </span>\n                </div>\n            </div>\n        );\n    }\n}","import React from \"react\"\n\nconst styleDiv = {\n    minHeight: \"100vh\",\n    background: \"#ffffe6\",\n    textAlign: \"center\"\n\n}\n/**\n * Component for 404 page\n */\nexport default function Error404() {\n    return (\n        <div style={styleDiv}>\n            <h1 className=\"headerTextDark\">Error 404</h1>\n            <h1 className=\"subHeaderTextDark\"> Page not found</h1>\n        </div>\n    );\n}","export const SocialMediaUrl = {\n    GITHUB: \"https://www.github.com/imvishi\",\n    TWITTER: \"https://www.twitter.com/imvishi_\",\n    FACEBOOK: \"https://www.facebook.com/vishal.verma.35912672\",\n    LINKEDIN: \"https://www.linkedin.com/in/vishal-verma-b72119a2/\",\n    INSTAGRAM: \"https://www.instagram.com/imvishii\",\n    STACK_OVERFLOW: \"https://stackoverflow.com/users/6168612/imvishi\"\n}","import React  from \"react\";\nimport {\n    faLinkedin,\n    faFacebookSquare,\n    faGithubSquare,\n    faTwitterSquare,\n    faInstagram,\n    faStackOverflow\n} from '@fortawesome/free-brands-svg-icons'\nimport {SocialMediaUrl} from \"../js/Constant\"\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport \"../Style/SocialMediaStyle.css\"\n\n/**\n * Social Media Component. This component shows social media icons and handle Social media Icons clicks.\n */\nexport default function SocialMedia() {\n    return (\n        <div className=\"Div\">\n            <FontAwesomeIcon\n                icon={faGithubSquare}\n                className=\"GitHubIcon\"\n                onClick={() => window.location.href = SocialMediaUrl.GITHUB}/>\n            <FontAwesomeIcon\n                icon={faLinkedin}\n                className=\"LinkedInIcon\"\n                onClick={() => window.location.href = SocialMediaUrl.LINKEDIN}/>\n             <FontAwesomeIcon\n                icon={faStackOverflow}\n                className=\"StackOverFlowIcon\"\n                onClick={() => window.location.href = SocialMediaUrl.STACK_OVERFLOW}/>\n            <FontAwesomeIcon\n                icon={faTwitterSquare}\n                className=\"TwitterIcon\"\n                onClick={() => window.location.href = SocialMediaUrl.TWITTER}/>\n            <FontAwesomeIcon\n                icon={faFacebookSquare}\n                className=\"FaceBookIcon\"\n                onClick={() => window.location.href = SocialMediaUrl.FACEBOOK}/>\n            <FontAwesomeIcon\n                icon={faInstagram}\n                className=\"InstagramIcon\"\n                onClick={() => window.location.href = SocialMediaUrl.INSTAGRAM}/>\n        </div>\n    )\n}","import React, {Component} from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport ToolBar from \"./ToolBar\";\nimport {Home} from \"./Home\";\nimport Error404 from \"./Error404\";\nimport {Switch, Route, Redirect, withRouter} from 'react-router-dom'\nimport {TransitionGroup, CSSTransition} from \"react-transition-group\";\nimport '../Style/transitionStyle.css'\nimport SocialMedia from \"./SocialMedia\";\n\n/**\n * Main component that handle all the sections of the app.\n */\nconst mainClass = class Main extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const canShowNavBar = this.props.location.pathname !== \"/home\"\n        const {location} = this.props;\n        const public_url = process.env.PUBLIC_URL\n        console.log(public_url +\"    \"+ this.props.location.pathname)\n        return (\n            <div>\n                {canShowNavBar ? <ToolBar/> : null}\n                <SocialMedia/>\n                <TransitionGroup>\n                    <CSSTransition\n                        key={location.key}\n                        timeout={{\n                            enter: 1000,\n                            exit: 1000,\n                        }}\n                        classNames=\"page-slide\">\n                        <Switch location={location}>\n                            <Route exact path=\"/\"><Redirect to=\"/home\"/></Route>\n                            <Route path=\"/home\" component={() => <Home/>}/>\n                            <Route path=\"/about\" component={Error404}/>\n                            <Route path=\"/portfolio\" component={Error404}/>\n                            <Route path=\"/contact\" component={Error404}/>\n                            <Route component={Error404}/>\n                        </Switch>\n                    </CSSTransition>\n                </TransitionGroup>\n            </div>\n        );\n    }\n}\nexport default withRouter(mainClass)","import React from 'react';\nimport './App.css';\nimport Main from \"./Components/Main\";\nimport {HashRouter} from 'react-router-dom'\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <HashRouter><Main/></HashRouter>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}